/*
 * This file is generated by jOOQ.
 */
package app.jooq.tables.records;


import app.jooq.tables.Book;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements Record8<Integer, String, String, Timestamp, String, Integer, String, Byte> {

    private static final long serialVersionUID = 268601970;

    /**
     * Setter for <code>bookshelf.book.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bookshelf.book.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bookshelf.book.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bookshelf.book.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bookshelf.book.subtitle</code>.
     */
    public void setSubtitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bookshelf.book.subtitle</code>.
     */
    public String getSubtitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bookshelf.book.published</code>.
     */
    public void setPublished(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>bookshelf.book.published</code>.
     */
    public Timestamp getPublished() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>bookshelf.book.publisher</code>.
     */
    public void setPublisher(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>bookshelf.book.publisher</code>.
     */
    public String getPublisher() {
        return (String) get(4);
    }

    /**
     * Setter for <code>bookshelf.book.pages</code>.
     */
    public void setPages(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>bookshelf.book.pages</code>.
     */
    public Integer getPages() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>bookshelf.book.description</code>.
     */
    public void setDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>bookshelf.book.description</code>.
     */
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>bookshelf.book.instock</code>.
     */
    public void setInstock(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>bookshelf.book.instock</code>.
     */
    public Byte getInstock() {
        return (Byte) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Timestamp, String, Integer, String, Byte> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Timestamp, String, Integer, String, Byte> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Book.BOOK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Book.BOOK.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Book.BOOK.SUBTITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Book.BOOK.PUBLISHED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Book.BOOK.PUBLISHER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Book.BOOK.PAGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Book.BOOK.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return Book.BOOK.INSTOCK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSubtitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getPublished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getPublisher();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getPages();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component8() {
        return getInstock();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSubtitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getPublished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getPublisher();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getPages();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getInstock();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value2(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value3(String value) {
        setSubtitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value4(Timestamp value) {
        setPublished(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value5(String value) {
        setPublisher(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value6(Integer value) {
        setPages(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value7(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value8(Byte value) {
        setInstock(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord values(Integer value1, String value2, String value3, Timestamp value4, String value5, Integer value6, String value7, Byte value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Integer id, String title, String subtitle, Timestamp published, String publisher, Integer pages, String description, Byte instock) {
        super(Book.BOOK);

        set(0, id);
        set(1, title);
        set(2, subtitle);
        set(3, published);
        set(4, publisher);
        set(5, pages);
        set(6, description);
        set(7, instock);
    }
}
